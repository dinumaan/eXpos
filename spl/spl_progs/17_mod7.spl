// INT 9
loadi(20,33);
loadi(21,33);

// MOD1
loadi(42,55);
loadi(43,56);

// MOD2
loadi(44,57);
loadi(45,58);

//console interrupt
loadi(8,21);
loadi(9,22);

//load module 0 : recourse manager 
loadi(40,53);
loadi(41,54);

// load module 4 : device manager
loadi(48,61);
loadi(49,62);

// load module 5 : scheduler
loadi(50,63);
loadi(51,64);

//load even program 
loadi(83,69);

//load INIT program
loadi(65,7);
loadi(66,8);

// load INT10 
loadi(22,35);
loadi(23,36);

// load exception handler 
loadi(2, 15);
loadi(3, 16);

// load common share library code
loadi(63,13);
loadi(64,14);

// load interrupt timer rutine
loadi(4, 17);
loadi(5, 18);

// load INT7 console write
loadi(16,29);
loadi(17,30);

//Load int 6
loadi(14,27);
loadi(15,28);

// initliazing terminal status table
[TERMINAL_STATUS_TABLE + 0] = 0; 


// page table for init process
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//Process Table for init process 
[PROCESS_TABLE + 16 + 10] = 0; // MODE flag
[PROCESS_TABLE + 16  + 11] = 80; // user area page number
[PROCESS_TABLE + 16  + 1] = 1; // PID
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20; // ptbr
[PROCESS_TABLE + 16 + 15] = 10; // ptlr
[PROCESS_TABLE + 16 + 12] = 0;  // kptr
[PROCESS_TABLE + 16 + 13] =  8*512; // uptr
[PROCESS_TABLE + 16 + 4] = CREATED; // state filed
[SYSTEM_STATUS_TABLE + 1] = 1; // System Status Table for PIDS

// set remming entries in process table as terinated 
alias ptr R0;
ptr=2;
while(ptr<MAX_PROC_NUM)do
	[PROCESS_TABLE+ptr*16+4]=TERMINATED;
	ptr=ptr+1;
endwhile;

ptr = 0;

// Initialize the memory free list with value 1 for pages used
while(ptr < 128)do
	if(ptr < 83)then
		[MEMORY_FREE_LIST + ptr] = 1;
	else
		[MEMORY_FREE_LIST + ptr] = 0;
	endif;
	ptr = ptr+1;
endwhile;

[SYSTEM_STATUS_TABLE + 2] = 128-83;
[SYSTEM_STATUS_TABLE + 3] = 0;
// set sp
[76*512] = [65*512+1];
breakpoint;
return;

